#[allow(dead_code)]
fn sudoku2(grid: Vec<Vec<char>>) -> bool {
  let mut valid_i3x3 = [[0; 9]; 3];
  let mut iby3 = 0;
  for i in 0..grid.len() {
    if iby3 != i/3 {
      valid_i3x3 = [[0; 9]; 3];
    }
    iby3 = i/3;
    let mut valid_row = [0; 9];
    let mut valid_col = [0; 9];
    for j in 0..grid.len() {
      if grid[i][j] != '.' {
        if valid_row[grid[i][j] as usize - 49] != 0 {
          return false;
        } else {
          valid_row[grid[i][j] as usize - 49] = grid[i][j] as usize - 48;
        }
      }
      if grid[j][i] != '.' {
        if valid_col[grid[j][i] as usize - 49] != 0 {
          return false;
        } else {
          valid_col[grid[j][i] as usize - 49] = grid[j][i] as usize - 48;
        }
      }
      if grid[i][j] != '.' {
        if valid_i3x3[j/3][grid[i][j] as usize - 49] != 0 {
          return false;
        } else {
          valid_i3x3[j/3][grid[i][j] as usize - 49] = grid[i][j] as usize - 48;
        }
      }
    }
  }
  true
}

#[cfg(test)]
mod tests {
  use super::*;

  #[test]
  fn test_sudoku2() {
    // 1
    let mut grid = vec![
      vec!['.','.','.','1','4','.','.','2','.'], 
      vec!['.','.','6','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','1','.','.','.','.','.','.'], 
      vec!['.','6','7','.','.','.','.','.','9'], 
      vec!['.','.','.','.','.','.','8','1','.'], 
      vec!['.','3','.','.','.','.','.','.','6'], 
      vec!['.','.','.','.','.','7','.','.','.'], 
      vec!['.','.','.','5','.','.','.','7','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 2
    grid = vec![
      vec!['.','.','.','.','2','.','.','9','.'], 
      vec!['.','.','.','.','6','.','.','.','.'], 
      vec!['7','1','.','.','7','5','.','.','.'], 
      vec!['.','7','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','8','3','.','.','.'], 
      vec!['.','.','8','.','.','7','.','6','.'], 
      vec!['.','.','.','.','.','2','.','.','.'], 
      vec!['.','1','.','2','.','.','.','.','.'], 
      vec!['.','2','.','.','3','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 3
    grid = vec![
      vec!['.','.','4','.','.','.','6','3','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['5','.','.','.','.','.','.','9','.'], 
      vec!['.','.','.','5','6','.','.','.','.'], 
      vec!['4','.','3','.','.','.','.','.','1'], 
      vec!['.','.','.','7','.','.','.','.','.'], 
      vec!['.','.','.','5','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 4
    grid = vec![
      vec!['.','.','.','.','.','.','.','.','2'], 
      vec!['.','.','.','.','.','.','6','.','.'], 
      vec!['.','.','1','4','.','.','8','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','3','.','.','.','.'], 
      vec!['5','.','8','6','.','.','.','.','.'], 
      vec!['.','9','.','.','.','.','4','.','.'], 
      vec!['.','.','.','.','5','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 5
    grid = vec![
      vec!['.','9','.','.','4','.','.','.','.'], 
      vec!['1','.','.','.','.','.','6','.','.'], 
      vec!['.','.','3','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','7','.','.','.','.','.'], 
      vec!['3','.','.','.','5','.','.','.','.'], 
      vec!['.','.','7','.','.','4','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','7','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 6
    grid = vec![
      vec!['7','.','.','.','4','.','.','.','.'], 
      vec!['.','.','.','8','6','5','.','.','.'], 
      vec!['.','1','.','2','.','.','.','.','.'], 
      vec!['.','.','.','.','.','9','.','.','.'], 
      vec!['.','.','.','.','5','.','5','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','2','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 7
    grid = vec![
      vec!['.','4','.','.','.','.','.','.','.'], 
      vec!['.','.','4','.','.','.','.','.','.'], 
      vec!['.','.','.','1','.','.','7','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','3','.','.','.','6','.'], 
      vec!['.','.','.','.','.','6','.','9','.'], 
      vec!['.','.','.','.','1','.','.','.','.'], 
      vec!['.','.','.','.','.','.','2','.','.'], 
      vec!['.','.','.','8','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 8
    grid = vec![
      vec!['.','.','5','.','.','.','.','.','.'], 
      vec!['.','.','.','8','.','.','.','3','.'], 
      vec!['.','5','.','.','2','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','9'], 
      vec!['.','.','.','.','.','.','4','.','.'], 
      vec!['.','.','.','.','.','.','.','.','7'], 
      vec!['.','1','.','.','.','.','.','.','.'], 
      vec!['2','4','.','.','.','.','9','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 9
    grid = vec![
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','9','.','.','.','.','.','.','1'], 
      vec!['8','.','.','.','.','.','.','.','.'], 
      vec!['.','9','9','3','5','7','.','.','.'], 
      vec!['.','.','.','.','.','.','.','4','.'], 
      vec!['.','.','.','8','.','.','.','.','.'], 
      vec!['.','1','.','.','.','.','4','.','9'], 
      vec!['.','.','.','5','.','4','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 10
    grid = vec![
      vec!['.','.','.','2','.','.','6','.','.'], 
      vec!['.','.','.','1','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','5','.','1','.','.','8'], 
      vec!['.','3','.','.','.','.','.','.','.'], 
      vec!['.','.','.','9','.','.','.','.','3'], 
      vec!['4','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','3','8','.'], 
      vec!['.','.','.','.','.','.','.','.','4']
    ];
    assert_eq!(sudoku2(grid), true);
    // 11
    grid = vec![
      vec!['.','.','.','.','8','.','.','.','.'], 
      vec!['.','.','.','.','.','.','5','.','.'], 
      vec!['.','.','.','.','4','.','.','2','.'], 
      vec!['.','.','.','3','.','9','.','.','.'], 
      vec!['.','.','1','8','.','.','9','.','.'], 
      vec!['.','.','.','.','.','5','1','.','.'], 
      vec!['.','.','3','.','.','8','.','.','.'], 
      vec!['.','1','2','.','3','.','.','.','.'], 
      vec!['.','.','.','.','.','7','.','.','1']
    ];
    assert_eq!(sudoku2(grid), true);
    // 12
    grid = vec![
      vec!['.','.','.','.','.','.','5','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['9','3','.','.','2','.','4','.','.'], 
      vec!['.','.','7','.','.','.','3','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','3','4','.','.','.','.'], 
      vec!['.','.','.','.','.','3','.','.','.'], 
      vec!['.','.','.','.','.','5','2','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 13
    grid = vec![
      vec!['.','.','.','.','4','.','9','.','.'], 
      vec!['.','.','2','1','.','.','3','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','3'], 
      vec!['.','.','.','2','.','.','.','.','.'], 
      vec!['.','.','.','.','.','7','.','.','.'], 
      vec!['.','.','.','6','1','.','.','.','.'], 
      vec!['.','.','9','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','9','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 14
    grid = vec![
      vec!['.','8','7','6','5','4','3','2','1'], 
      vec!['2','.','.','.','.','.','.','.','.'], 
      vec!['3','.','.','.','.','.','.','.','.'], 
      vec!['4','.','.','.','.','.','.','.','.'], 
      vec!['5','.','.','.','.','.','.','.','.'], 
      vec!['6','.','.','.','.','.','.','.','.'], 
      vec!['7','.','.','.','.','.','.','.','.'], 
      vec!['8','.','.','.','.','.','.','.','.'], 
      vec!['9','.','.','.','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 15
    grid = vec![
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['4','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','6','.','.'], 
      vec!['.','.','.','3','8','.','.','.','.'], 
      vec!['.','5','.','.','.','6','.','.','1'], 
      vec!['8','.','.','.','.','.','.','6','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','7','.','9','.','.','.','.'], 
      vec!['.','.','.','6','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 16
    grid = vec![
      vec!['.','.','.','.','.','.','.','.','1'], 
      vec!['.','.','.','.','.','6','.','.','.'], 
      vec!['4','.','.','.','.','.','3','8','.'], 
      vec!['7','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','5','3','.','.','.'], 
      vec!['.','.','.','.','6','8','.','.','.'], 
      vec!['3','.','.','9','.','.','.','.','.'], 
      vec!['.','.','.','.','.','2','1','1','.'], 
      vec!['.','.','.','.','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 17
    grid = vec![
      vec!['.','8','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','2','.','.','.','.'], 
      vec!['.','6','.','.','.','.','1','.','4'], 
      vec!['.','.','.','9','.','.','7','.','.'], 
      vec!['.','.','.','.','.','.','.','4','.'], 
      vec!['.','.','1','.','.','8','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','5','.','7','.'], 
      vec!['.','.','3','.','.','5','6','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 18
    grid = vec![
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','2','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','2','7','1','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','2','.','.','.','.','.','.','.'], 
      vec!['.','5','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','9','.','.','.','8'], 
      vec!['.','.','.','.','.','1','6','.','.'], 
      vec!['.','.','.','.','6','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), true);
    // 19
    grid = vec![
      vec!['.','.','.','9','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','3','.','.','.','.','.','1'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['1','.','.','.','.','.','3','.','.'], 
      vec!['.','.','.','.','2','.','6','.','.'], 
      vec!['.','9','.','.','.','.','.','7','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['8','.','.','8','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
    // 20
    grid = vec![
      vec!['.','.','.','.','.','.','8','3','.'], 
      vec!['2','.','.','.','.','.','.','.','.'], 
      vec!['7','.','.','.','.','7','.','9','5'], 
      vec!['.','.','.','1','.','.','.','.','2'], 
      vec!['.','8','.','9','.','.','.','.','.'], 
      vec!['.','.','5','1','9','.','.','.','.'], 
      vec!['5','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.'], 
      vec!['.','.','.','.','.','.','.','.','.']
    ];
    assert_eq!(sudoku2(grid), false);
  }
}
